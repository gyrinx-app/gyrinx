# Generated by Django 5.2.5 on 2025-09-03 09:43

from django.db import migrations


def fix_smart_quotes(apps, schema_editor):
    """Replace smart quotes with simple quotes in stat fields."""

    # Smart quotes to replace
    # Using chr() to avoid confusion with visual similarity
    smart_quote_replacements = {
        chr(0x201C): '"',  # U+201C LEFT DOUBLE QUOTATION MARK
        chr(0x201D): '"',  # U+201D RIGHT DOUBLE QUOTATION MARK
        chr(0x2018): "'",  # U+2018 LEFT SINGLE QUOTATION MARK
        chr(0x2019): "'",  # U+2019 RIGHT SINGLE QUOTATION MARK
    }

    # Fix ContentWeaponProfile
    ContentWeaponProfile = apps.get_model("content", "ContentWeaponProfile")
    fields = [
        "range_short",
        "range_long",
        "accuracy_short",
        "accuracy_long",
        "strength",
        "armour_piercing",
        "damage",
        "ammo",
    ]

    for profile in ContentWeaponProfile.objects.all():
        modified = False
        for field in fields:
            value = getattr(profile, field)
            if value:
                new_value = value
                for smart, simple in smart_quote_replacements.items():
                    if smart in new_value:
                        new_value = new_value.replace(smart, simple)
                        modified = True
                if new_value != value:
                    setattr(profile, field, new_value)
        if modified:
            profile.save()

    # Fix ContentStatlineStat
    ContentStatlineStat = apps.get_model("content", "ContentStatlineStat")
    for stat in ContentStatlineStat.objects.all():
        if stat.value:
            new_value = stat.value
            for smart, simple in smart_quote_replacements.items():
                new_value = new_value.replace(smart, simple)
            if new_value != stat.value:
                stat.value = new_value
                stat.save()

    # Fix ListFighterStatOverride
    ListFighterStatOverride = apps.get_model("core", "ListFighterStatOverride")
    for override in ListFighterStatOverride.objects.all():
        if override.value:
            new_value = override.value
            for smart, simple in smart_quote_replacements.items():
                new_value = new_value.replace(smart, simple)
            if new_value != override.value:
                override.value = new_value
                override.save()


def reverse_fix_smart_quotes(apps, schema_editor):
    """
    Reversing this migration doesn't do anything since we don't want to
    re-introduce smart quotes.
    """
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("content", "0143_add_database_indexes"),
    ]

    operations = [
        migrations.RunPython(fix_smart_quotes, reverse_fix_smart_quotes),
    ]
