name: Format Check

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  merge_group:

permissions:
  contents: read

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "24"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          python -m venv .venv && \
          . .venv/bin/activate && \
          pip install --editable .

      - name: Write to .env file
        run: |
          echo "SECRET_KEY=test-secret" >> .env
          echo "DJANGO_SUPERUSER_PASSWORD=password" >> .env

      - name: Install Node dependencies
        run: npm ci

      - name: Check Python formatting with ruff
        run: |
          source .venv/bin/activate && \
          ruff check . && \
          ruff format --check .

      - name: Check Django template formatting with djlint
        run: |
          source .venv/bin/activate && \
          djlint --profile=django --lint --check .

      - name: Check JavaScript/CSS/SCSS/JSON/YAML/Markdown formatting with prettier
        run: |
          source .venv/bin/activate && \
          npm run fmt-check

      - name: Check Jupyter notebooks are stripped
        run: |
          source .venv/bin/activate
          # Find all Jupyter notebooks and check if they have outputs
          find . -name "*.ipynb" -type f -print0 | xargs -0 -I {} sh -c '
            if nbstripout --verify "$1"; then
              echo "✓ $1 is properly stripped"
            else
              echo "✗ $1 contains outputs that should be stripped"
              exit 1
            fi
          ' _ {}
